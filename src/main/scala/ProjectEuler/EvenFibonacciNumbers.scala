package ProjectEuler

/*
  * Problem 2
  *
  * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  * By starting with 1 and 2, the first 10 terms will be:
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  * find the sum of the even-valued terms.
  */

object EvenFibonacciNumbers extends App {
  val zero = 1
  val limit = 4000000

  def fibonacci(num: Int): Int = {
    if (num == 1) 1
    else if (num == 2) 2
    else fibonacci(num - 1) + fibonacci(num - 2)
  }

  val result = for (i <- zero until limit) yield {
    i match {
      case _ if i > 2 =>
      case _ => i
    }
  }

  print(result)

}
